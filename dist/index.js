"use strict";var M=Object.create;var P=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var p=(t,e)=>P(t,"name",{value:e,configurable:!0});var Y=(t,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of v(e))!w.call(t,n)&&n!==r&&P(t,n,{get:()=>e[n],enumerable:!(o=F(e,n))||o.enumerable});return t};var _=(t,e,r)=>(r=t!=null?M(k(t)):{},Y(e||!t||!t.__esModule?P(r,"default",{value:t,enumerable:!0}):r,t));var h=_(require("fastify")),E=_(require("@fastify/helmet")),A=_(require("@fastify/compress")),T=_(require("@fastify/cors")),I=_(require("path")),C=_(require("fs")),g=_(require("cross-fetch")),L=require("@ethereumjs/tx"),N=require("@theconvospace/sdk"),m=require("@ethersproject/address");require("dotenv").config({path:".env"});var u=(0,h.default)({logger:!1}),K=require("ethereumjs-util").toBuffer,B=require("eth-phishing-detect");u.register(E.default,{global:!0});u.register(A.default,{global:!0});u.register(T.default,{origin:"*"});var{ETHERSCAN_API_KEY:X,POLYGONSCAN_API_KEY:Z,OPTIMISMSCAN_API_KEY:ee,MAINNET_FLASHBOTS_RPC_URL:te,GOERLI_FLASHBOTS_RPC_URL:se,MAINNET_FLASHBOTS_FAST_RPC_URL:ie,TENDERLY_USER:re,TENDERLY_PROJECT:ne,TENDERLY_ACCESS_KEY:D,SEPOLIA_RPC_URL:ae,POLYGON_RPC_URL:oe,POLYGON_TESTNET_RPC_URL:ce,OPTIMISM_RPC_URL:le,OPTIMISM_TESTNET_RPC_URL:Re,ARBITRUM_RPC_URL:pe,ARBITRUM_TESTNET_RPC_URL:_e,MAINNET_RPC_URL:fe,ROPSTEN_RPC_URL:ue,KOVAN_RPC_URL:de,RINKEBY_RPC_URL:me,GOERLI_RPC_URL:ye,CONVO_API_KEY:j,ALCHEMY_API_KEY:ge,CNVSEC_ID:Pe}=process.env,s=p(t=>{let e=process.env[t];if(e===void 0)throw new Error(`'${t}' Environment Variable is Not Defined`);return e},"getEnv"),q=`https://api.tenderly.co/api/v1/account/${s("TENDERLY_USER")}/project/${s("TENDERLY_PROJECT")}/simulate`,G=new N.Convo(j),x={alchemyApiKey:s("ALCHEMY_API_KEY"),CNVSEC_ID:s("CNVSEC_ID"),etherscanApiKey:s("ETHERSCAN_API_KEY"),polygonscanApiKey:s("POLYGONSCAN_API_KEY"),optimismscanApiKey:s("OPTIMISMSCAN_API_KEY"),polygonMainnetRpc:"",etherumMainnetRpc:"",avalancheMainnetRpc:"",maticPriceInUsd:0,etherumPriceInUsd:0,deepdaoApiKey:"",zapperApiKey:"",DEBUG:!1},y={mainnet:s("MAINNET_RPC_URL"),"mainnet-flashbots":s("MAINNET_FLASHBOTS_RPC_URL"),"mainnet-flashbots-fast":s("MAINNET_FLASHBOTS_FAST_RPC_URL"),ropsten:s("ROPSTEN_RPC_URL"),kovan:s("KOVAN_RPC_URL"),rinkeby:s("RINKEBY_RPC_URL"),goerli:s("GOERLI_RPC_URL"),sepolia:s("SEPOLIA_RPC_URL"),"goerli-flashbots":s("GOERLI_FLASHBOTS_RPC_URL"),polygon:s("POLYGON_RPC_URL"),"polygon-testnet":s("POLYGON_TESTNET_RPC_URL"),optimism:s("OPTIMISM_RPC_URL"),"optimism-testnet":s("OPTIMISM_TESTNET_RPC_URL"),arbitrum:s("ARBITRUM_RPC_URL"),"arbitrum-testnet":s("ARBITRUM_TESTNET_RPC_URL"),manual:"1"};Object.freeze(y);function a(t){return{isMalicious:!0,rpcResp:{id:420,jsonrpc:"2.0",error:{code:-32003,message:t}}}}p(a,"getMalRpcError");async function S(t){try{if((0,m.isAddress)(t)){let e=await G.omnid.kits.isMalicious((0,m.getAddress)(t),x);return console.log("omnid.kits.isMalicious",(0,m.getAddress)(t),e),(e==null?void 0:e.alchemy)&&e.alchemy===!0?a("Spam Contract Flagged by Alchemy"):(e==null?void 0:e.chainabuse)&&e.chainabuse===!0?a("Contract Flagged by ChainAbuse"):(e==null?void 0:e.cryptoscamdb)&&e.cryptoscamdb===!0?a("Contract Flagged by CryptoscamDB"):(e==null?void 0:e.etherscan)&&"label"in e.etherscan?a(`Address Flagged as ${e.etherscan.label} by Etherscan`):(e==null?void 0:e.mew)&&"comment"in e.mew?a("Address Flagged by MyEtherWallet"):e!=null&&e.sdn?a("Address Flagged by OFAC"):e!=null&&e.tokenblacklist?a("Address Blacklisted by Stablecoin"):e!=null&&e.txn?a("Address/Contract Funded by Tornado Cash."):{isMalicious:!1}}else return{isMalicious:!1}}catch{return{isMalicious:!1}}}p(S,"checkAddress");async function H(t){try{return await(0,g.default)(q,{method:"POST",body:JSON.stringify(t),headers:{"X-Access-Key":D}}).then(r=>r.json())}catch(e){return console.log("alchemySimulate",e),!1}}p(H,"alchemySimulate");async function O(t,e){let r=e.query;try{let o=t==="manual"?r.rpcUrl:y[t];if(o!==void 0)return await(0,g.default)(o,{method:"POST",body:JSON.stringify(e.body),headers:{"Content-Type":"application/json",Accept:"application/json","infura-source":"metamask/internal",origin:"chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn"}}).then(i=>i.json());{let{rpcResp:n}=a("Invalid RPC Url");return n}}catch(o){let{rpcResp:n}=a(o);return n}}p(O,"sendToRpc");async function J(t,e){let r=e.body,o=e.query;var n=K(r.params[0]),i=L.FeeMarketEIP1559Transaction.fromSerializedTx(n),l=i.toJSON();if(Object.keys(l).includes("to")===!0){let{isMalicious:R,rpcResp:c}=await S(l.to);if(R==!0&&c)return c.id=r.id,c}let b={network_id:parseInt(i.chainId.toString(10)),from:i.getSenderAddress().toString(),to:i.to?i.to.toString():"",input:i.data.toString("hex"),gas:parseInt(i.gasLimit.toString(10)),gas_price:i.maxFeePerGas.add(i.maxPriorityFeePerGas).toString(10),value:parseInt(i.value.toString(10)),save_if_fails:!0,save:!1,simulation_type:"full"},f=await H(b);if(f!=null&&f!=!1&&"transaction_info"in f&&f.transaction_info!=null){console.log("Sim Successful");for(let R=0;R<f.transaction_info.logs.length;R++){let c=f.transaction_info.logs[R];if(c.name==="Approval"||c.name==="Transfer"){let{isMalicious:d,rpcResp:U}=await S(c.inputs[1].value);if(d===!0)return U}}}if(t!="manual"&&"blockUnverifiedContracts"in o&&o.blockUnverifiedContracts===!0){let R=await(0,g.default)(`https://sourcify.dev/server/check-all-by-addresses?addresses=${l==null?void 0:l.to}&chainIds=1,4,11155111,137,80001,10,42161,421611`),c;if(R.ok===!0){if(c=await R.json(),Object.keys(c).includes("status")){let{rpcResp:d}=a("The contract is unverified");return d}}else{let{rpcResp:d}=a("Sourcify Request Failed");return d}}return await O(t,e)}p(J,"processTxs");u.get("/",async(t,e)=>{let r=await C.default.readFileSync(I.default.join(__dirname,"../public/","index.html"));e.header("Content-Security-Policy","default-src *; style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com; script-src 'self' 'unsafe-inline'; img-src data:;"),e.type("text/html").send(r)});u.post("/:network",async(t,e)=>{let{hostname:r}=t,o=t.body;if(B(r)){let{rpcResp:i}=a(`\u{1F6A8} Phishing detector for the site ${r} has been triggered.`);e.send(i)}else{let{network:i}=t.params;if(i&&Object.keys(y).includes(i)===!0)if(o.method=="eth_sendRawTransaction"){let l=await J(i,t);e.send(l)}else{let l=await O(i,t);e.send(l)}else e.send({error:`Invalid network '${i}', available networks are ${Object.keys(y).join(", ")}`})}});u.listen({port:parseInt(s("PORT"))||8545,host:"0.0.0.0"},(t,e)=>{if(!t)console.log("\u{1F680} Server is listening on",e);else throw t});
